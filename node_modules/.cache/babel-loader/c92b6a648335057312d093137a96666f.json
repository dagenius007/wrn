{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"/Users/joshuaoluikpe/Documents/personal/wrn/src/pages/dashboard/gamma/index.js\";\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport ChartistGraph from 'react-chartist';\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nimport ProgressCard from 'components/CleanUIComponents/ProgressCard';\nimport ShortItemInfo from 'components/CleanUIComponents/ShortItemInfo';\nimport Donut from 'components/CleanUIComponents/Donut';\nimport { progressCardsData, newUsersData, inboundBandwidthData, outboundBandwidthData, topPhotosData, topPhotosGraphData, financeStatsData, supportCasesTableData, supportCasesPieData } from './data.json';\nimport styles from './style.module.scss';\nconst boundChartistOptions = {\n  showPoint: true,\n  showLine: true,\n  showArea: true,\n  fullWidth: true,\n  showLabel: false,\n  axisX: {\n    showGrid: false,\n    showLabel: false,\n    offset: 0\n  },\n  axisY: {\n    showGrid: false,\n    showLabel: false,\n    offset: 0\n  },\n  chartPadding: 0,\n  low: 0,\n  plugins: [ChartistTooltip({\n    anchorToPoint: false,\n    appendToBody: true,\n    seriesName: false\n  })]\n};\nconst supportCasesPieOptions = {\n  donut: true,\n  donutWidth: 35,\n  showLabel: false,\n  plugins: [ChartistTooltip({\n    anchorToPoint: false,\n    appendToBody: true,\n    seriesName: false\n  })]\n};\nconst supportCasesTableColumns = [{\n  title: 'Type',\n  dataIndex: 'type',\n  key: 'type'\n}, {\n  title: 'Amount',\n  key: 'amount',\n  dataIndex: 'amount',\n  render: amount => {\n    if (amount === 'Negative') {\n      return React.createElement(\"span\", {\n        className: \"text-danger font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, amount);\n    }\n\n    return React.createElement(\"span\", {\n      className: \"text-primary font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, amount);\n  }\n}];\n\nclass DashboardGamma extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      title: \"Dashboard Gamma\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"utils__title utils__title--flat mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-uppercase font-size-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Progress Information\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, progressCardsData.map(item => React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      key: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(ProgressCard, {\n      title: item.title,\n      note: item.note,\n      currentValue: item.currentValue,\n      percent: item.percent,\n      dataColor: item.dataColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"utils__title utils__title--flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-uppercase font-size-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Inbound Bandwidth\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"font-size-36 font-weight-bold text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"246\")), React.createElement(ChartistGraph, {\n      data: inboundBandwidthData,\n      options: boundChartistOptions,\n      type: \"Line\",\n      className: \"height-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"graphCard card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"utils__title utils__title--flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-uppercase font-size-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Outbound Bandwidth\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"font-size-36 font-weight-bold text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"52\")), React.createElement(\"div\", {\n      className: \"utils__chartist utils__chartist--success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(ChartistGraph, {\n      data: outboundBandwidthData,\n      options: boundChartistOptions,\n      type: \"Line\",\n      className: \"height-200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-xl-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card graphCard card--fullHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"utils__title utils__title--flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-uppercase font-size-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Top photos\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, topPhotosData.map(item => {\n      const actionData = React.createElement(\"span\", {\n        style: {\n          color: item.actionDataColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, item.actionData);\n      return React.createElement(ShortItemInfo, {\n        key: item.name,\n        img: item.img,\n        name: item.name,\n        note: item.note,\n        actionData: actionData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"utils__chartist utils__chartist--danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(ChartistGraph, {\n      data: topPhotosGraphData,\n      options: boundChartistOptions,\n      type: \"Line\",\n      className: \"height-300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-xl-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card--fullHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"utils__title utils__title--flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-uppercase font-size-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"New Users\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, newUsersData.map(item => {\n      const actionData = React.createElement(\"a\", {\n        href: \"javascript: void(0);\",\n        className: \"btn btn-sm btn-outline-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Follow\");\n      return React.createElement(ShortItemInfo, {\n        key: item.name,\n        img: item.img,\n        name: item.name,\n        note: item.note,\n        actionData: actionData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      });\n    }))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card--fullHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"utils__title utils__title--flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-uppercase font-size-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Support cases\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      className: \"utils__scrollTable\",\n      scroll: {\n        x: '100%'\n      },\n      dataSource: supportCasesTableData,\n      columns: supportCasesTableColumns,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-xl-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `h-100 d-flex flex-column justify-content-center align-items-center ${styles.chartPieExample}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(ChartistGraph, {\n      data: supportCasesPieData,\n      type: \"Pie\",\n      options: supportCasesPieOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Donut, {\n      type: \"success\",\n      name: \"Ready\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Donut, {\n      type: \"primary\",\n      name: \"In progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Donut, {\n      type: \"danger\",\n      name: \"Defected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }))))))))), React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card--fullHeight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"utils__title utils__title--flat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-uppercase font-size-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Finance Stats\"))), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, financeStatsData.map(item => {\n      const actionData = React.createElement(\"span\", {\n        style: {\n          color: item.actionDataColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, item.actionData);\n      return React.createElement(ShortItemInfo, {\n        key: item.name,\n        img: item.img,\n        name: item.name,\n        note: item.note,\n        actionData: actionData,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      });\n    }))))));\n  }\n\n}\n\nexport default DashboardGamma;","map":{"version":3,"sources":["/Users/joshuaoluikpe/Documents/personal/wrn/src/pages/dashboard/gamma/index.js"],"names":["React","Helmet","ChartistGraph","ChartistTooltip","ProgressCard","ShortItemInfo","Donut","progressCardsData","newUsersData","inboundBandwidthData","outboundBandwidthData","topPhotosData","topPhotosGraphData","financeStatsData","supportCasesTableData","supportCasesPieData","styles","boundChartistOptions","showPoint","showLine","showArea","fullWidth","showLabel","axisX","showGrid","offset","axisY","chartPadding","low","plugins","anchorToPoint","appendToBody","seriesName","supportCasesPieOptions","donut","donutWidth","supportCasesTableColumns","title","dataIndex","key","render","amount","DashboardGamma","Component","map","item","note","currentValue","percent","dataColor","actionData","color","actionDataColor","name","img","x","chartPieExample"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AAEA,SACEC,iBADF,EAEEC,YAFF,EAGEC,oBAHF,EAIEC,qBAJF,EAKEC,aALF,EAMEC,kBANF,EAOEC,gBAPF,EAQEC,qBARF,EASEC,mBATF,QAUO,aAVP;AAYA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,SAAS,EAAE,IADgB;AAE3BC,EAAAA,QAAQ,EAAE,IAFiB;AAG3BC,EAAAA,QAAQ,EAAE,IAHiB;AAI3BC,EAAAA,SAAS,EAAE,IAJgB;AAK3BC,EAAAA,SAAS,EAAE,KALgB;AAM3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELF,IAAAA,SAAS,EAAE,KAFN;AAGLG,IAAAA,MAAM,EAAE;AAHH,GANoB;AAW3BC,EAAAA,KAAK,EAAE;AACLF,IAAAA,QAAQ,EAAE,KADL;AAELF,IAAAA,SAAS,EAAE,KAFN;AAGLG,IAAAA,MAAM,EAAE;AAHH,GAXoB;AAgB3BE,EAAAA,YAAY,EAAE,CAhBa;AAiB3BC,EAAAA,GAAG,EAAE,CAjBsB;AAkB3BC,EAAAA,OAAO,EAAE,CACP1B,eAAe,CAAC;AACd2B,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,YAAY,EAAE,IAFA;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAAD,CADR;AAlBkB,CAA7B;AA2BA,MAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,KAAK,EAAE,IADsB;AAE7BC,EAAAA,UAAU,EAAE,EAFiB;AAG7Bb,EAAAA,SAAS,EAAE,KAHkB;AAI7BO,EAAAA,OAAO,EAAE,CACP1B,eAAe,CAAC;AACd2B,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,YAAY,EAAE,IAFA;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAAD,CADR;AAJoB,CAA/B;AAaA,MAAMI,wBAAwB,GAAG,CAC/B;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAD+B,EAM/B;AACEF,EAAAA,KAAK,EAAE,QADT;AAEEE,EAAAA,GAAG,EAAE,QAFP;AAGED,EAAAA,SAAS,EAAE,QAHb;AAIEE,EAAAA,MAAM,EAAEC,MAAM,IAAI;AAChB,QAAIA,MAAM,KAAK,UAAf,EAA2B;AACzB,aAAO;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDA,MAAhD,CAAP;AACD;;AACD,WAAO;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDA,MAAjD,CAAP;AACD;AATH,CAN+B,CAAjC;;AAmBA,MAAMC,cAAN,SAA6B1C,KAAK,CAAC2C,SAAnC,CAA6C;AAC3CH,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjC,iBAAiB,CAACqC,GAAlB,CAAsBC,IAAI,IACzB;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEA,IAAI,CAACR,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEQ,IAAI,CAACR,KADd;AAEE,MAAA,IAAI,EAAEQ,IAAI,CAACC,IAFb;AAGE,MAAA,YAAY,EAAED,IAAI,CAACE,YAHrB;AAIE,MAAA,OAAO,EAAEF,IAAI,CAACG,OAJhB;AAKE,MAAA,SAAS,EAAEH,IAAI,CAACI,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CAJF,CADF,CAFF,EAsBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,4CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CANF,EASE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAExC,oBADR;AAEE,MAAA,OAAO,EAAEQ,oBAFX;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CADF,EAmBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,4CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CANF,EASE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEP,qBADR;AAEE,MAAA,OAAO,EAAEO,oBAFX;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,CAnBF,CADF,CADF,EA2CE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,aAAa,CAACiC,GAAd,CAAkBC,IAAI,IAAI;AACzB,YAAMK,UAAU,GACd;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEN,IAAI,CAACO;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CP,IAAI,CAACK,UAApD,CADF;AAGA,aACE,oBAAC,aAAD;AACE,QAAA,GAAG,EAAEL,IAAI,CAACQ,IADZ;AAEE,QAAA,GAAG,EAAER,IAAI,CAACS,GAFZ;AAGE,QAAA,IAAI,EAAET,IAAI,CAACQ,IAHb;AAIE,QAAA,IAAI,EAAER,IAAI,CAACC,IAJb;AAKE,QAAA,UAAU,EAAEI,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAbA,CADH,CANF,EAsBE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEtC,kBADR;AAEE,MAAA,OAAO,EAAEK,oBAFX;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,CADF,CA3CF,EA4EE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,YAAY,CAACoC,GAAb,CAAiBC,IAAI,IAAI;AACxB,YAAMK,UAAU,GACd;AAAG,QAAA,IAAI,EAAC,sBAAR;AAA+B,QAAA,SAAS,EAAC,gCAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKA,aACE,oBAAC,aAAD;AACE,QAAA,GAAG,EAAEL,IAAI,CAACQ,IADZ;AAEE,QAAA,GAAG,EAAER,IAAI,CAACS,GAFZ;AAGE,QAAA,IAAI,EAAET,IAAI,CAACQ,IAHb;AAIE,QAAA,IAAI,EAAER,IAAI,CAACC,IAJb;AAKE,QAAA,UAAU,EAAEI,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAfA,CADH,CANF,CADF,CA5EF,CAtBF,EA8HE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,MAAM,EAAE;AAAEK,QAAAA,CAAC,EAAE;AAAL,OAFV;AAGE,MAAA,UAAU,EAAEzC,qBAHd;AAIE,MAAA,OAAO,EAAEsB,wBAJX;AAKE,MAAA,UAAU,EAAE,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,EAYE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAG,sEAAqEpB,MAAM,CAACwC,eAAgB,EAD1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEzC,mBADR;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,OAAO,EAAEkB,sBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAQE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,IAAI,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CARF,CADF,CAZF,CADF,CANF,CADF,CADF,EA+CE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,gBAAgB,CAAC+B,GAAjB,CAAqBC,IAAI,IAAI;AAC5B,YAAMK,UAAU,GACd;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEN,IAAI,CAACO;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CP,IAAI,CAACK,UAApD,CADF;AAGA,aACE,oBAAC,aAAD;AACE,QAAA,GAAG,EAAEL,IAAI,CAACQ,IADZ;AAEE,QAAA,GAAG,EAAER,IAAI,CAACS,GAFZ;AAGE,QAAA,IAAI,EAAET,IAAI,CAACQ,IAHb;AAIE,QAAA,IAAI,EAAER,IAAI,CAACC,IAJb;AAKE,QAAA,UAAU,EAAEI,UALd;AAME,QAAA,IAAI,EAAC,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAdA,CADH,CANF,CADF,CA/CF,CA9HF,CADF;AA2MD;;AA7M0C;;AAgN7C,eAAeR,cAAf","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport ChartistGraph from 'react-chartist'\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated'\nimport { Table } from 'antd'\nimport ProgressCard from 'components/CleanUIComponents/ProgressCard'\nimport ShortItemInfo from 'components/CleanUIComponents/ShortItemInfo'\nimport Donut from 'components/CleanUIComponents/Donut'\n\nimport {\n  progressCardsData,\n  newUsersData,\n  inboundBandwidthData,\n  outboundBandwidthData,\n  topPhotosData,\n  topPhotosGraphData,\n  financeStatsData,\n  supportCasesTableData,\n  supportCasesPieData,\n} from './data.json'\n\nimport styles from './style.module.scss'\n\nconst boundChartistOptions = {\n  showPoint: true,\n  showLine: true,\n  showArea: true,\n  fullWidth: true,\n  showLabel: false,\n  axisX: {\n    showGrid: false,\n    showLabel: false,\n    offset: 0,\n  },\n  axisY: {\n    showGrid: false,\n    showLabel: false,\n    offset: 0,\n  },\n  chartPadding: 0,\n  low: 0,\n  plugins: [\n    ChartistTooltip({\n      anchorToPoint: false,\n      appendToBody: true,\n      seriesName: false,\n    }),\n  ],\n}\n\nconst supportCasesPieOptions = {\n  donut: true,\n  donutWidth: 35,\n  showLabel: false,\n  plugins: [\n    ChartistTooltip({\n      anchorToPoint: false,\n      appendToBody: true,\n      seriesName: false,\n    }),\n  ],\n}\n\nconst supportCasesTableColumns = [\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n  },\n  {\n    title: 'Amount',\n    key: 'amount',\n    dataIndex: 'amount',\n    render: amount => {\n      if (amount === 'Negative') {\n        return <span className=\"text-danger font-weight-bold\">{amount}</span>\n      }\n      return <span className=\"text-primary font-weight-bold\">{amount}</span>\n    },\n  },\n]\n\nclass DashboardGamma extends React.Component {\n  render() {\n    return (\n      <div>\n        <Helmet title=\"Dashboard Gamma\" />\n        <div className=\"row\">\n          <div className=\"col-xl-12\">\n            <div className=\"utils__title utils__title--flat mb-3\">\n              <strong className=\"text-uppercase font-size-16\">Progress Information</strong>\n            </div>\n            <div className=\"row\">\n              {progressCardsData.map(item => (\n                <div className=\"col-lg-6\" key={item.title}>\n                  <ProgressCard\n                    title={item.title}\n                    note={item.note}\n                    currentValue={item.currentValue}\n                    percent={item.percent}\n                    dataColor={item.dataColor}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xl-4\">\n            <div className=\"row\">\n              <div className=\"col-xl-12\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <div className=\"utils__title utils__title--flat\">\n                      <strong className=\"text-uppercase font-size-16\">Inbound Bandwidth</strong>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <span className=\"font-size-36 font-weight-bold text-primary\">246</span>\n                  </div>\n                  <ChartistGraph\n                    data={inboundBandwidthData}\n                    options={boundChartistOptions}\n                    type=\"Line\"\n                    className=\"height-200\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-xl-12\">\n                <div className=\"graphCard card\">\n                  <div className=\"card-header\">\n                    <div className=\"utils__title utils__title--flat\">\n                      <strong className=\"text-uppercase font-size-16\">Outbound Bandwidth</strong>\n                    </div>\n                  </div>\n                  <div className=\"card-body\">\n                    <span className=\"font-size-36 font-weight-bold text-success\">52</span>\n                  </div>\n                  <div className=\"utils__chartist utils__chartist--success\">\n                    <ChartistGraph\n                      data={outboundBandwidthData}\n                      options={boundChartistOptions}\n                      type=\"Line\"\n                      className=\"height-200\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4\">\n            <div className=\"card graphCard card--fullHeight\">\n              <div className=\"card-header\">\n                <div className=\"utils__title utils__title--flat\">\n                  <strong className=\"text-uppercase font-size-16\">Top photos</strong>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                {topPhotosData.map(item => {\n                  const actionData = (\n                    <span style={{ color: item.actionDataColor }}>{item.actionData}</span>\n                  )\n                  return (\n                    <ShortItemInfo\n                      key={item.name}\n                      img={item.img}\n                      name={item.name}\n                      note={item.note}\n                      actionData={actionData}\n                    />\n                  )\n                })}\n              </div>\n              <div className=\"utils__chartist utils__chartist--danger\">\n                <ChartistGraph\n                  data={topPhotosGraphData}\n                  options={boundChartistOptions}\n                  type=\"Line\"\n                  className=\"height-300\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4\">\n            <div className=\"card card--fullHeight\">\n              <div className=\"card-header\">\n                <div className=\"utils__title utils__title--flat\">\n                  <strong className=\"text-uppercase font-size-16\">New Users</strong>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                {newUsersData.map(item => {\n                  const actionData = (\n                    <a href=\"javascript: void(0);\" className=\"btn btn-sm btn-outline-default\">\n                      Follow\n                    </a>\n                  )\n                  return (\n                    <ShortItemInfo\n                      key={item.name}\n                      img={item.img}\n                      name={item.name}\n                      note={item.note}\n                      actionData={actionData}\n                    />\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"card card--fullHeight\">\n              <div className=\"card-header\">\n                <div className=\"utils__title utils__title--flat\">\n                  <strong className=\"text-uppercase font-size-16\">Support cases</strong>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-xl-6\">\n                    <div className=\"mb-3\">\n                      <Table\n                        className=\"utils__scrollTable\"\n                        scroll={{ x: '100%' }}\n                        dataSource={supportCasesTableData}\n                        columns={supportCasesTableColumns}\n                        pagination={false}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-xl-6\">\n                    <div\n                      className={`h-100 d-flex flex-column justify-content-center align-items-center ${styles.chartPieExample}`}\n                    >\n                      <ChartistGraph\n                        data={supportCasesPieData}\n                        type=\"Pie\"\n                        options={supportCasesPieOptions}\n                      />\n                      <div className=\"text-center\">\n                        <span className=\"mr-2\">\n                          <Donut type=\"success\" name=\"Ready\" />\n                        </span>\n                        <span className=\"mr-2\">\n                          <Donut type=\"primary\" name=\"In progress\" />\n                        </span>\n                        <span className=\"mr-2\">\n                          <Donut type=\"danger\" name=\"Defected\" />\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\">\n            <div className=\"card card--fullHeight\">\n              <div className=\"card-header\">\n                <div className=\"utils__title utils__title--flat\">\n                  <strong className=\"text-uppercase font-size-16\">Finance Stats</strong>\n                </div>\n              </div>\n              <div className=\"card-body\">\n                {financeStatsData.map(item => {\n                  const actionData = (\n                    <span style={{ color: item.actionDataColor }}>{item.actionData}</span>\n                  )\n                  return (\n                    <ShortItemInfo\n                      key={item.name}\n                      img={item.img}\n                      name={item.name}\n                      note={item.note}\n                      actionData={actionData}\n                      size=\"large\"\n                    />\n                  )\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DashboardGamma\n"]},"metadata":{},"sourceType":"module"}