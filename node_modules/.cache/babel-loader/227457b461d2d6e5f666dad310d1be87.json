{"ast":null,"code":"import _objectSpread from \"/Users/joshuaoluikpe/Documents/personal/wrn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport store from 'store';\nimport actions from './actions';\n\nconst STORED_SETTINGS = storedSettings => {\n  const settings = {};\n  Object.keys(storedSettings).forEach(key => {\n    const item = store.get(`app.settings.${key}`);\n    settings[key] = typeof item !== 'undefined' ? item : storedSettings[key];\n  });\n  return settings;\n};\n\nconst initialState = _objectSpread({}, STORED_SETTINGS({\n  isMobileView: false,\n  isMobileMenuOpen: false,\n  isLightTheme: true,\n  isSettingsOpen: false,\n  isMenuTop: false,\n  isMenuCollapsed: false,\n  isBorderless: true,\n  isSquaredBorders: false,\n  isFixedWidth: false,\n  isMenuShadow: true,\n  locale: 'en-US'\n}));\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return _objectSpread({}, state, {}, action.payload);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joshuaoluikpe/Documents/personal/wrn/src/redux/settings/reducers.js"],"names":["store","actions","STORED_SETTINGS","storedSettings","settings","Object","keys","forEach","key","item","get","initialState","isMobileView","isMobileMenuOpen","isLightTheme","isSettingsOpen","isMenuTop","isMenuCollapsed","isBorderless","isSquaredBorders","isFixedWidth","isMenuShadow","locale","userReducer","state","action","type","SET_STATE","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,eAAe,GAAGC,cAAc,IAAI;AACxC,QAAMC,QAAQ,GAAG,EAAjB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,OAA5B,CAAoCC,GAAG,IAAI;AACzC,UAAMC,IAAI,GAAGT,KAAK,CAACU,GAAN,CAAW,gBAAeF,GAAI,EAA9B,CAAb;AACAJ,IAAAA,QAAQ,CAACI,GAAD,CAAR,GAAgB,OAAOC,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqCN,cAAc,CAACK,GAAD,CAAnE;AACD,GAHD;AAIA,SAAOJ,QAAP;AACD,CAPD;;AASA,MAAMO,YAAY,qBACbT,eAAe,CAAC;AACjBU,EAAAA,YAAY,EAAE,KADG;AAEjBC,EAAAA,gBAAgB,EAAE,KAFD;AAGjBC,EAAAA,YAAY,EAAE,IAHG;AAIjBC,EAAAA,cAAc,EAAE,KAJC;AAKjBC,EAAAA,SAAS,EAAE,KALM;AAMjBC,EAAAA,eAAe,EAAE,KANA;AAOjBC,EAAAA,YAAY,EAAE,IAPG;AAQjBC,EAAAA,gBAAgB,EAAE,KARD;AASjBC,EAAAA,YAAY,EAAE,KATG;AAUjBC,EAAAA,YAAY,EAAE,IAVG;AAWjBC,EAAAA,MAAM,EAAE;AAXS,CAAD,CADF,CAAlB;;AAgBA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGb,YAA7B,EAA2Cc,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKzB,OAAO,CAAC0B,SAAb;AACE,+BAAYH,KAAZ,MAAsBC,MAAM,CAACG,OAA7B;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD","sourcesContent":["import store from 'store'\nimport actions from './actions'\n\nconst STORED_SETTINGS = storedSettings => {\n  const settings = {}\n  Object.keys(storedSettings).forEach(key => {\n    const item = store.get(`app.settings.${key}`)\n    settings[key] = typeof item !== 'undefined' ? item : storedSettings[key]\n  })\n  return settings\n}\n\nconst initialState = {\n  ...STORED_SETTINGS({\n    isMobileView: false,\n    isMobileMenuOpen: false,\n    isLightTheme: true,\n    isSettingsOpen: false,\n    isMenuTop: false,\n    isMenuCollapsed: false,\n    isBorderless: true,\n    isSquaredBorders: false,\n    isFixedWidth: false,\n    isMenuShadow: true,\n    locale: 'en-US',\n  }),\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_STATE:\n      return { ...state, ...action.payload }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}