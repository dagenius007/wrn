{"ast":null,"code":"import _objectSpread from \"/Users/joshuaoluikpe/Documents/personal/wrn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/joshuaoluikpe/Documents/personal/wrn/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/joshuaoluikpe/Documents/personal/wrn/src/components/LayoutComponents/Menu/MenuLeft/index.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport store from 'store';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport _ from 'lodash';\nimport styles from './style.module.scss';\nconst Sider = _Layout.Sider;\nconst SubMenu = _Menu.SubMenu,\n      Divider = _Menu.Divider;\n\nconst mapStateToProps = ({\n  menu,\n  settings\n}) => ({\n  menuData: menu.menuLeftData,\n  isMenuCollapsed: settings.isMenuCollapsed,\n  isMobileView: settings.isMobileView,\n  isSettingsOpen: settings.isSettingsOpen,\n  isLightTheme: settings.isLightTheme,\n  isMobileMenuOpen: settings.isMobileMenuOpen\n});\n\nlet MenuLeft = (_dec = connect(mapStateToProps), withRouter(_class = _dec(_class = (_temp = class MenuLeft extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedKeys: store.get('app.menu.selectedKeys') || [],\n      openedKeys: store.get('app.menu.openedKeys') || []\n    };\n\n    this.setSelectedKeys = props => {\n      const menuData = this.props.menuData;\n\n      const flattenItems = (items, key) => items.reduce((flattenedItems, item) => {\n        flattenedItems.push(item);\n\n        if (Array.isArray(item[key])) {\n          return flattenedItems.concat(flattenItems(item[key], key));\n        }\n\n        return flattenedItems;\n      }, []);\n\n      const selectedItem = _.find(flattenItems(menuData, 'children'), ['url', props.location.pathname]);\n\n      this.setState({\n        selectedKeys: selectedItem ? [selectedItem.key] : []\n      });\n    };\n\n    this.onCollapse = (value, type) => {\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            isMenuCollapsed = _this$props.isMenuCollapsed;\n\n      if (type === 'responsive' && isMenuCollapsed) {\n        return;\n      }\n\n      dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'isMenuCollapsed',\n          value: !isMenuCollapsed\n        }\n      });\n      this.setState({\n        openedKeys: []\n      });\n    };\n\n    this.onOpenChange = openedKeys => {\n      store.set('app.menu.openedKeys', openedKeys);\n      this.setState({\n        openedKeys\n      });\n    };\n\n    this.handleClick = e => {\n      const _this$props2 = this.props,\n            dispatch = _this$props2.dispatch,\n            isSettingsOpen = _this$props2.isSettingsOpen;\n      store.set('app.menu.selectedKeys', [e.key]); // custom action on settings menu item\n\n      if (e.key === 'settings') {\n        dispatch({\n          type: 'settings/CHANGE_SETTING',\n          payload: {\n            setting: 'isSettingsOpen',\n            value: !isSettingsOpen\n          }\n        });\n        return;\n      }\n\n      this.setState({\n        selectedKeys: [e.key] // openKeys: e.keyPath,\n\n      });\n    };\n\n    this.generateMenuItems = () => {\n      const _this$props$menuData = this.props.menuData,\n            menuData = _this$props$menuData === void 0 ? [] : _this$props$menuData;\n\n      const generateItem = item => {\n        const key = item.key,\n              title = item.title,\n              url = item.url,\n              icon = item.icon,\n              disabled = item.disabled,\n              pro = item.pro;\n\n        if (item.divider) {\n          return React.createElement(Divider, {\n            key: Math.random(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          });\n        }\n\n        if (item.url) {\n          return React.createElement(_Menu.Item, {\n            key: key,\n            disabled: disabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, item.target ? React.createElement(\"a\", {\n            href: url,\n            target: item.target,\n            rel: \"noopener noreferrer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, icon && React.createElement(\"span\", {\n            className: `${icon} ${styles.icon} icon-collapsed-hidden`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: styles.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, title), pro && React.createElement(\"span\", {\n            className: \"badge badge-primary badge-collapsed-hidden ml-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, \"PRO\")) : React.createElement(Link, {\n            to: url,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, icon && React.createElement(\"span\", {\n            className: `${icon} ${styles.icon} icon-collapsed-hidden`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: styles.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, title), pro && React.createElement(\"span\", {\n            className: \"badge badge-primary badge-collapsed-hidden ml-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"PRO\")));\n        }\n\n        return React.createElement(_Menu.Item, {\n          key: key,\n          disabled: disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, icon && React.createElement(\"span\", {\n          className: `${icon} ${styles.icon} icon-collapsed-hidden`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, title), pro && React.createElement(\"span\", {\n          className: \"badge badge-primary badge-collapsed-hidden ml-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"PRO\"));\n      };\n\n      const generateSubmenu = items => items.map(menuItem => {\n        if (menuItem.children) {\n          const subMenuTitle = React.createElement(\"span\", {\n            key: menuItem.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: styles.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, menuItem.title), menuItem.icon && React.createElement(\"span\", {\n            className: `${menuItem.icon} ${styles.icon}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }));\n          return React.createElement(SubMenu, {\n            title: subMenuTitle,\n            key: menuItem.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, generateSubmenu(menuItem.children));\n        }\n\n        return generateItem(menuItem);\n      });\n\n      return menuData.map(menuItem => {\n        if (menuItem.children) {\n          const subMenuTitle = React.createElement(\"span\", {\n            key: menuItem.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: styles.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, menuItem.title), menuItem.icon && React.createElement(\"span\", {\n            className: `${menuItem.icon} ${styles.icon}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }));\n          return React.createElement(SubMenu, {\n            title: subMenuTitle,\n            key: menuItem.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, generateSubmenu(menuItem.children));\n        }\n\n        return generateItem(menuItem);\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.setSelectedKeys(this.props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.isMenuCollapsed && !newProps.isMobileView) {\n      this.setState({\n        openedKeys: []\n      });\n    }\n\n    this.setSelectedKeys(newProps);\n  }\n\n  render() {\n    const _this$state = this.state,\n          selectedKeys = _this$state.selectedKeys,\n          openedKeys = _this$state.openedKeys;\n    const _this$props3 = this.props,\n          isMobileView = _this$props3.isMobileView,\n          isMenuCollapsed = _this$props3.isMenuCollapsed,\n          isLightTheme = _this$props3.isLightTheme;\n    const menuSettings = isMobileView ? {\n      width: 256,\n      collapsible: false,\n      collapsed: false,\n      onCollapse: this.onCollapse\n    } : {\n      width: 256,\n      collapsible: true,\n      collapsed: isMenuCollapsed,\n      onCollapse: this.onCollapse,\n      breakpoint: 'lg'\n    };\n    const menu = this.generateMenuItems();\n    return React.createElement(Sider, Object.assign({}, menuSettings, {\n      className: isLightTheme ? `${styles.menu} ${styles.light}` : styles.menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.logoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `resources/images/logo-inverse${menuSettings.collapsed ? '-mobile' : ''}.png`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }))), React.createElement(Scrollbars, {\n      className: isMobileView ? styles.scrollbarMobile : styles.scrollbarDesktop,\n      renderThumbVertical: (_ref) => {\n        let style = _ref.style,\n            props = _objectWithoutProperties(_ref, [\"style\"]);\n\n        return React.createElement(\"div\", Object.assign({}, props, {\n          style: _objectSpread({}, style, {\n            width: '4px',\n            borderRadius: 'inherit',\n            backgroundColor: '#c5cdd2',\n            left: '1px'\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }));\n      },\n      autoHide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(_Menu, {\n      theme: isLightTheme ? 'light' : 'dark',\n      onClick: this.handleClick,\n      selectedKeys: selectedKeys,\n      openKeys: openedKeys,\n      onOpenChange: this.onOpenChange,\n      mode: \"inline\",\n      className: styles.navigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, menu), React.createElement(\"div\", {\n      className: styles.buyPro,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"More components, more styles, more themes, and premium support!\")), React.createElement(\"a\", {\n      href: \"https://themeforest.net/item/clean-ui-react-admin-template/21938700\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"btn btn-sm btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Buy Bundle 26$\"))));\n  }\n\n}, _temp)) || _class) || _class);\nexport default MenuLeft;","map":{"version":3,"sources":["/Users/joshuaoluikpe/Documents/personal/wrn/src/components/LayoutComponents/Menu/MenuLeft/index.js"],"names":["React","connect","Link","withRouter","store","Scrollbars","_","styles","Sider","SubMenu","Divider","mapStateToProps","menu","settings","menuData","menuLeftData","isMenuCollapsed","isMobileView","isSettingsOpen","isLightTheme","isMobileMenuOpen","MenuLeft","Component","state","selectedKeys","get","openedKeys","setSelectedKeys","props","flattenItems","items","key","reduce","flattenedItems","item","push","Array","isArray","concat","selectedItem","find","location","pathname","setState","onCollapse","value","type","dispatch","payload","setting","onOpenChange","set","handleClick","e","generateMenuItems","generateItem","title","url","icon","disabled","pro","divider","Math","random","target","generateSubmenu","map","menuItem","children","subMenuTitle","componentWillMount","componentWillReceiveProps","newProps","render","menuSettings","width","collapsible","collapsed","breakpoint","light","logo","logoContainer","scrollbarMobile","scrollbarDesktop","style","borderRadius","backgroundColor","left","navigation","buyPro"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Menu, Layout } from 'antd'\nimport store from 'store'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport _ from 'lodash'\nimport styles from './style.module.scss'\n\nconst { Sider } = Layout\nconst { SubMenu, Divider } = Menu\n\nconst mapStateToProps = ({ menu, settings }) => ({\n  menuData: menu.menuLeftData,\n  isMenuCollapsed: settings.isMenuCollapsed,\n  isMobileView: settings.isMobileView,\n  isSettingsOpen: settings.isSettingsOpen,\n  isLightTheme: settings.isLightTheme,\n  isMobileMenuOpen: settings.isMobileMenuOpen,\n})\n\n@withRouter\n@connect(mapStateToProps)\nclass MenuLeft extends React.Component {\n  state = {\n    selectedKeys: store.get('app.menu.selectedKeys') || [],\n    openedKeys: store.get('app.menu.openedKeys') || [],\n  }\n\n  componentWillMount() {\n    this.setSelectedKeys(this.props)\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.isMenuCollapsed && !newProps.isMobileView) {\n      this.setState({\n        openedKeys: [],\n      })\n    }\n    this.setSelectedKeys(newProps)\n  }\n\n  setSelectedKeys = props => {\n    const { menuData } = this.props\n    const flattenItems = (items, key) =>\n      items.reduce((flattenedItems, item) => {\n        flattenedItems.push(item)\n        if (Array.isArray(item[key])) {\n          return flattenedItems.concat(flattenItems(item[key], key))\n        }\n        return flattenedItems\n      }, [])\n    const selectedItem = _.find(flattenItems(menuData, 'children'), [\n      'url',\n      props.location.pathname,\n    ])\n    this.setState({\n      selectedKeys: selectedItem ? [selectedItem.key] : [],\n    })\n  }\n\n  onCollapse = (value, type) => {\n    const { dispatch, isMenuCollapsed } = this.props\n    if (type === 'responsive' && isMenuCollapsed) {\n      return\n    }\n\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'isMenuCollapsed',\n        value: !isMenuCollapsed,\n      },\n    })\n\n    this.setState({\n      openedKeys: [],\n    })\n  }\n\n  onOpenChange = openedKeys => {\n    store.set('app.menu.openedKeys', openedKeys)\n    this.setState({\n      openedKeys,\n    })\n  }\n\n  handleClick = e => {\n    const { dispatch, isSettingsOpen } = this.props\n    store.set('app.menu.selectedKeys', [e.key])\n    // custom action on settings menu item\n    if (e.key === 'settings') {\n      dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'isSettingsOpen',\n          value: !isSettingsOpen,\n        },\n      })\n      return\n    }\n    this.setState({\n      selectedKeys: [e.key],\n      // openKeys: e.keyPath,\n    })\n  }\n\n  generateMenuItems = () => {\n    const { menuData = [] } = this.props\n    const generateItem = item => {\n      const { key, title, url, icon, disabled, pro } = item\n      if (item.divider) {\n        return <Divider key={Math.random()} />\n      }\n      if (item.url) {\n        return (\n          <Menu.Item key={key} disabled={disabled}>\n            {item.target ? (\n              <a href={url} target={item.target} rel=\"noopener noreferrer\">\n                {icon && <span className={`${icon} ${styles.icon} icon-collapsed-hidden`} />}\n                <span className={styles.title}>{title}</span>\n                {pro && (\n                  <span className=\"badge badge-primary badge-collapsed-hidden ml-2\">PRO</span>\n                )}\n              </a>\n            ) : (\n              <Link to={url}>\n                {icon && <span className={`${icon} ${styles.icon} icon-collapsed-hidden`} />}\n                <span className={styles.title}>{title}</span>\n                {pro && (\n                  <span className=\"badge badge-primary badge-collapsed-hidden ml-2\">PRO</span>\n                )}\n              </Link>\n            )}\n          </Menu.Item>\n        )\n      }\n      return (\n        <Menu.Item key={key} disabled={disabled}>\n          {icon && <span className={`${icon} ${styles.icon} icon-collapsed-hidden`} />}\n          <span className={styles.title}>{title}</span>\n          {pro && <span className=\"badge badge-primary badge-collapsed-hidden ml-2\">PRO</span>}\n        </Menu.Item>\n      )\n    }\n\n    const generateSubmenu = items =>\n      items.map(menuItem => {\n        if (menuItem.children) {\n          const subMenuTitle = (\n            <span key={menuItem.key}>\n              <span className={styles.title}>{menuItem.title}</span>\n              {menuItem.icon && <span className={`${menuItem.icon} ${styles.icon}`} />}\n            </span>\n          )\n          return (\n            <SubMenu title={subMenuTitle} key={menuItem.key}>\n              {generateSubmenu(menuItem.children)}\n            </SubMenu>\n          )\n        }\n        return generateItem(menuItem)\n      })\n\n    return menuData.map(menuItem => {\n      if (menuItem.children) {\n        const subMenuTitle = (\n          <span key={menuItem.key}>\n            <span className={styles.title}>{menuItem.title}</span>\n            {menuItem.icon && <span className={`${menuItem.icon} ${styles.icon}`} />}\n          </span>\n        )\n        return (\n          <SubMenu title={subMenuTitle} key={menuItem.key}>\n            {generateSubmenu(menuItem.children)}\n          </SubMenu>\n        )\n      }\n      return generateItem(menuItem)\n    })\n  }\n\n  render() {\n    const { selectedKeys, openedKeys } = this.state\n    const { isMobileView, isMenuCollapsed, isLightTheme } = this.props\n    const menuSettings = isMobileView\n      ? {\n          width: 256,\n          collapsible: false,\n          collapsed: false,\n          onCollapse: this.onCollapse,\n        }\n      : {\n          width: 256,\n          collapsible: true,\n          collapsed: isMenuCollapsed,\n          onCollapse: this.onCollapse,\n          breakpoint: 'lg',\n        }\n\n    const menu = this.generateMenuItems()\n\n    return (\n      <Sider\n        {...menuSettings}\n        className={isLightTheme ? `${styles.menu} ${styles.light}` : styles.menu}\n      >\n        <div className={styles.logo}>\n          <div className={styles.logoContainer}>\n            <img\n              src={`resources/images/logo-inverse${menuSettings.collapsed ? '-mobile' : ''}.png`}\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <Scrollbars\n          className={isMobileView ? styles.scrollbarMobile : styles.scrollbarDesktop}\n          renderThumbVertical={({ style, ...props }) => (\n            <div\n              {...props}\n              style={{\n                ...style,\n                width: '4px',\n                borderRadius: 'inherit',\n                backgroundColor: '#c5cdd2',\n                left: '1px',\n              }}\n            />\n          )}\n          autoHide\n        >\n          <Menu\n            theme={isLightTheme ? 'light' : 'dark'}\n            onClick={this.handleClick}\n            selectedKeys={selectedKeys}\n            openKeys={openedKeys}\n            onOpenChange={this.onOpenChange}\n            mode=\"inline\"\n            className={styles.navigation}\n          >\n            {menu}\n          </Menu>\n          <div className={styles.buyPro}>\n            <p>\n              <strong>More components, more styles, more themes, and premium support!</strong>\n            </p>\n            <a\n              href=\"https://themeforest.net/item/clean-ui-react-admin-template/21938700\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"btn btn-sm btn-danger\"\n            >\n              Buy Bundle 26$\n            </a>\n          </div>\n        </Scrollbars>\n      </Sider>\n    )\n  }\n}\n\nexport default MenuLeft\n"]},"metadata":{},"sourceType":"module"}