{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/joshuaoluikpe/Documents/personal/wrn/src/components/LayoutComponents/Menu/index.js\";\n\nimport 'rc-drawer/assets/index.css';\nimport React from 'react';\nimport DrawerMenu from 'rc-drawer';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport MenuLeft from './MenuLeft';\nimport MenuTop from './MenuTop';\n\nconst mapStateToProps = ({\n  settings\n}) => ({\n  isMenuTop: settings.isMenuTop,\n  isMobileMenuOpen: settings.isMobileMenuOpen,\n  isMobileView: settings.isMobileView,\n  isLightTheme: settings.isLightTheme\n});\n\nlet AppMenu = (_dec = connect(mapStateToProps), withRouter(_class = _dec(_class = (_temp = class AppMenu extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.toggleOpen = () => {\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            isMobileMenuOpen = _this$props.isMobileMenuOpen;\n      document.querySelector('#root').setAttribute('style', !isMobileMenuOpen ? 'overflow: hidden; width: 100%; height: 100%;' : '');\n      dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'isMobileMenuOpen',\n          value: !isMobileMenuOpen\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          isMenuTop = _this$props2.isMenuTop,\n          isMobileMenuOpen = _this$props2.isMobileMenuOpen,\n          isMobileView = _this$props2.isMobileView,\n          isLightTheme = _this$props2.isLightTheme;\n\n    const BootstrappedMenu = () => {\n      if (isMobileView) {\n        return React.createElement(DrawerMenu, {\n          getContainer: null,\n          level: null,\n          open: isMobileMenuOpen,\n          onMaskClick: this.toggleOpen,\n          onHandleClick: this.toggleOpen,\n          className: isLightTheme ? 'drawer-light' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(MenuLeft, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      }\n\n      if (isMenuTop) {\n        return React.createElement(MenuTop, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(MenuLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    };\n\n    return BootstrappedMenu();\n  }\n\n}, _temp)) || _class) || _class);\nexport default AppMenu;","map":{"version":3,"sources":["/Users/joshuaoluikpe/Documents/personal/wrn/src/components/LayoutComponents/Menu/index.js"],"names":["React","DrawerMenu","connect","withRouter","MenuLeft","MenuTop","mapStateToProps","settings","isMenuTop","isMobileMenuOpen","isMobileView","isLightTheme","AppMenu","Component","toggleOpen","props","dispatch","document","querySelector","setAttribute","type","payload","setting","value","render","BootstrappedMenu"],"mappings":";;;;;AAAA,OAAO,4BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAmB;AACzCC,EAAAA,SAAS,EAAED,QAAQ,CAACC,SADqB;AAEzCC,EAAAA,gBAAgB,EAAEF,QAAQ,CAACE,gBAFc;AAGzCC,EAAAA,YAAY,EAAEH,QAAQ,CAACG,YAHkB;AAIzCC,EAAAA,YAAY,EAAEJ,QAAQ,CAACI;AAJkB,CAAnB,CAAxB;;IASMC,O,WADLV,OAAO,CAACI,eAAD,C,EADPH,U,iCAAD,MAEMS,OAFN,SAEsBZ,KAAK,CAACa,SAF5B,CAEsC;AAAA;AAAA;;AAAA,SACpCC,UADoC,GACvB,MAAM;AAAA,0BACsB,KAAKC,KAD3B;AAAA,YACTC,QADS,eACTA,QADS;AAAA,YACCP,gBADD,eACCA,gBADD;AAEjBQ,MAAAA,QAAQ,CACLC,aADH,CACiB,OADjB,EAEGC,YAFH,CAGI,OAHJ,EAII,CAACV,gBAAD,GAAoB,8CAApB,GAAqE,EAJzE;AAMAO,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,yBADC;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,kBADF;AAEPC,UAAAA,KAAK,EAAE,CAACd;AAFD;AAFF,OAAD,CAAR;AAOD,KAhBmC;AAAA;;AAkBpCe,EAAAA,MAAM,GAAG;AAAA,yBAC6D,KAAKT,KADlE;AAAA,UACCP,SADD,gBACCA,SADD;AAAA,UACYC,gBADZ,gBACYA,gBADZ;AAAA,UAC8BC,YAD9B,gBAC8BA,YAD9B;AAAA,UAC4CC,YAD5C,gBAC4CA,YAD5C;;AAEP,UAAMc,gBAAgB,GAAG,MAAM;AAC7B,UAAIf,YAAJ,EAAkB;AAChB,eACE,oBAAC,UAAD;AACE,UAAA,YAAY,EAAE,IADhB;AAEE,UAAA,KAAK,EAAE,IAFT;AAGE,UAAA,IAAI,EAAED,gBAHR;AAIE,UAAA,WAAW,EAAE,KAAKK,UAJpB;AAKE,UAAA,aAAa,EAAE,KAAKA,UALtB;AAME,UAAA,SAAS,EAAEH,YAAY,GAAG,cAAH,GAAoB,EAN7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,CADF;AAYD;;AACD,UAAIH,SAAJ,EAAe;AACb,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAnBD;;AAqBA,WAAOiB,gBAAgB,EAAvB;AACD;;AA1CmC,C;AA6CtC,eAAeb,OAAf","sourcesContent":["import 'rc-drawer/assets/index.css'\nimport React from 'react'\nimport DrawerMenu from 'rc-drawer'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport MenuLeft from './MenuLeft'\nimport MenuTop from './MenuTop'\n\nconst mapStateToProps = ({ settings }) => ({\n  isMenuTop: settings.isMenuTop,\n  isMobileMenuOpen: settings.isMobileMenuOpen,\n  isMobileView: settings.isMobileView,\n  isLightTheme: settings.isLightTheme,\n})\n\n@withRouter\n@connect(mapStateToProps)\nclass AppMenu extends React.Component {\n  toggleOpen = () => {\n    const { dispatch, isMobileMenuOpen } = this.props\n    document\n      .querySelector('#root')\n      .setAttribute(\n        'style',\n        !isMobileMenuOpen ? 'overflow: hidden; width: 100%; height: 100%;' : '',\n      )\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'isMobileMenuOpen',\n        value: !isMobileMenuOpen,\n      },\n    })\n  }\n\n  render() {\n    const { isMenuTop, isMobileMenuOpen, isMobileView, isLightTheme } = this.props\n    const BootstrappedMenu = () => {\n      if (isMobileView) {\n        return (\n          <DrawerMenu\n            getContainer={null}\n            level={null}\n            open={isMobileMenuOpen}\n            onMaskClick={this.toggleOpen}\n            onHandleClick={this.toggleOpen}\n            className={isLightTheme ? 'drawer-light' : ''}\n          >\n            <MenuLeft />\n          </DrawerMenu>\n        )\n      }\n      if (isMenuTop) {\n        return <MenuTop />\n      }\n      return <MenuLeft />\n    }\n\n    return BootstrappedMenu()\n  }\n}\n\nexport default AppMenu\n"]},"metadata":{},"sourceType":"module"}