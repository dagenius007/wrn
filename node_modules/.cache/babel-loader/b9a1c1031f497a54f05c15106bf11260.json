{"ast":null,"code":"import \"antd/es/dropdown/style\";\nimport _Dropdown from \"antd/es/dropdown\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/joshuaoluikpe/Documents/personal/wrn/src/components/LayoutComponents/TopBar/LanguageSelector/index.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './style.module.scss';\nlet LanguageSelector = (_dec = connect(({\n  settings\n}) => ({\n  settings\n})), _dec(_class = (_temp = class LanguageSelector extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changeLang = ({\n      key\n    }) => {\n      const dispatch = this.props.dispatch;\n      dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'locale',\n          value: key\n        }\n      });\n    };\n  }\n\n  render() {\n    const locale = this.props.settings.locale;\n    const language = locale.substr(0, 2);\n    const langMenu = React.createElement(_Menu, {\n      className: styles.menu,\n      selectedKeys: [locale],\n      onClick: this.changeLang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(_Menu.Item, {\n      key: \"en-US\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"English\",\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\uD83C\\uDDEC\\uD83C\\uDDE7\"), \"English\"), React.createElement(_Menu.Item, {\n      key: \"fr-FR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"French\",\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\uD83C\\uDDEB\\uD83C\\uDDF7\"), \"French\"), React.createElement(_Menu.Item, {\n      key: \"ru-RU\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\",\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\uD83C\\uDDF7\\uD83C\\uDDFA\"), \"\\u0420\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"), React.createElement(_Menu.Item, {\n      key: \"zh-CN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"\\u7B80\\u4F53\\u4E2D\\u6587\",\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\uD83C\\uDDE8\\uD83C\\uDDF3\"), \"\\u7B80\\u4F53\\u4E2D\\u6587\"));\n    return React.createElement(_Dropdown, {\n      overlay: langMenu,\n      trigger: ['click'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.dropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      className: \"text-uppercase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, language)));\n  }\n\n}, _temp)) || _class);\nexport default LanguageSelector;","map":{"version":3,"sources":["/Users/joshuaoluikpe/Documents/personal/wrn/src/components/LayoutComponents/TopBar/LanguageSelector/index.js"],"names":["React","connect","styles","LanguageSelector","settings","Component","changeLang","key","dispatch","props","type","payload","setting","value","render","locale","language","substr","langMenu","menu","dropdown"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;IAGMC,gB,WADLF,OAAO,CAAC,CAAC;AAAEG,EAAAA;AAAF,CAAD,MAAmB;AAAEA,EAAAA;AAAF,CAAnB,CAAD,C,yBAAR,MACMD,gBADN,SAC+BH,KAAK,CAACK,SADrC,CAC+C;AAAA;AAAA;;AAAA,SAC7CC,UAD6C,GAChC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAa;AAAA,YAChBC,QADgB,GACH,KAAKC,KADF,CAChBD,QADgB;AAExBA,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,yBADC;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,QADF;AAEPC,UAAAA,KAAK,EAAEN;AAFA;AAFF,OAAD,CAAR;AAOD,KAV4C;AAAA;;AAY7CO,EAAAA,MAAM,GAAG;AAAA,UAEOC,MAFP,GAGH,KAAKN,KAHF,CAELL,QAFK,CAEOW,MAFP;AAIP,UAAMC,QAAQ,GAAGD,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAAjB;AAEA,UAAMC,QAAQ,GACZ;AAAM,MAAA,SAAS,EAAEhB,MAAM,CAACiB,IAAxB;AAA8B,MAAA,YAAY,EAAE,CAACJ,MAAD,CAA5C;AAAsD,MAAA,OAAO,EAAE,KAAKT,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,0BAAM,IAAN;AAAW,MAAA,GAAG,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,SAA5B;AAAsC,MAAA,SAAS,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,YADF,EAOE,0BAAM,IAAN;AAAW,MAAA,GAAG,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,QAA5B;AAAqC,MAAA,SAAS,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,WAPF,EAaE,0BAAM,IAAN;AAAW,MAAA,GAAG,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,4CAA5B;AAAsC,MAAA,SAAS,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,+CAbF,EAmBE,0BAAM,IAAN;AAAW,MAAA,GAAG,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,0BAA5B;AAAmC,MAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,6BAnBF,CADF;AA4BA,WACE;AAAU,MAAA,OAAO,EAAEY,QAAnB;AAA6B,MAAA,OAAO,EAAE,CAAC,OAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACkB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCJ,QAApC,CADF,CADF,CADF;AAOD;;AArD4C,C;AAwD/C,eAAeb,gBAAf","sourcesContent":["import React from 'react'\nimport { Menu, Dropdown } from 'antd'\nimport { connect } from 'react-redux'\nimport styles from './style.module.scss'\n\n@connect(({ settings }) => ({ settings }))\nclass LanguageSelector extends React.Component {\n  changeLang = ({ key }) => {\n    const { dispatch } = this.props\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'locale',\n        value: key,\n      },\n    })\n  }\n\n  render() {\n    const {\n      settings: { locale },\n    } = this.props\n    const language = locale.substr(0, 2)\n\n    const langMenu = (\n      <Menu className={styles.menu} selectedKeys={[locale]} onClick={this.changeLang}>\n        <Menu.Item key=\"en-US\">\n          <span role=\"img\" aria-label=\"English\" className=\"mr-2\">\n            🇬🇧\n          </span>\n          English\n        </Menu.Item>\n        <Menu.Item key=\"fr-FR\">\n          <span role=\"img\" aria-label=\"French\" className=\"mr-2\">\n            🇫🇷\n          </span>\n          French\n        </Menu.Item>\n        <Menu.Item key=\"ru-RU\">\n          <span role=\"img\" aria-label=\"Русский\" className=\"mr-2\">\n            🇷🇺\n          </span>\n          Русский\n        </Menu.Item>\n        <Menu.Item key=\"zh-CN\">\n          <span role=\"img\" aria-label=\"简体中文\" className=\"mr-2\">\n            🇨🇳\n          </span>\n          简体中文\n        </Menu.Item>\n      </Menu>\n    )\n    return (\n      <Dropdown overlay={langMenu} trigger={['click']}>\n        <div className={styles.dropdown}>\n          <strong className=\"text-uppercase\">{language}</strong>\n        </div>\n      </Dropdown>\n    )\n  }\n}\n\nexport default LanguageSelector\n"]},"metadata":{},"sourceType":"module"}