{"ast":null,"code":"import \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/joshuaoluikpe/Documents/personal/wrn/src/components/LayoutComponents/Menu/MenuTop/index.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport store from 'store';\nimport _ from 'lodash';\nimport styles from './style.module.scss';\nconst SubMenu = _Menu.SubMenu,\n      Divider = _Menu.Divider;\n\nconst mapStateToProps = ({\n  menu,\n  settings\n}) => ({\n  menuData: menu.menuTopData,\n  isLightTheme: settings.isLightTheme,\n  isSettingsOpen: settings.isSettingsOpen\n});\n\nlet MenuTop = (_dec = connect(mapStateToProps), withRouter(_class = _dec(_class = (_temp = class MenuTop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedKeys: store.get('app.menu.selectedKeys') || []\n    };\n\n    this.setSelectedKeys = props => {\n      const menuData = this.props.menuData;\n\n      const flattenItems = (items, key) => items.reduce((flattenedItems, item) => {\n        flattenedItems.push(item);\n\n        if (Array.isArray(item[key])) {\n          return flattenedItems.concat(flattenItems(item[key], key));\n        }\n\n        return flattenedItems;\n      }, []);\n\n      const selectedItem = _.find(flattenItems(menuData, 'children'), ['url', props.location.pathname]);\n\n      this.setState({\n        selectedKeys: selectedItem ? [selectedItem.key] : []\n      });\n    };\n\n    this.handleClick = e => {\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            isSettingsOpen = _this$props.isSettingsOpen;\n      store.set('app.menu.selectedKeys', [e.key]);\n\n      if (e.key === 'settings') {\n        dispatch({\n          type: 'settings/CHANGE_SETTING',\n          payload: {\n            setting: 'isSettingsOpen',\n            value: !isSettingsOpen\n          }\n        });\n        return;\n      }\n\n      this.setState({\n        selectedKeys: [e.key]\n      });\n    };\n\n    this.generateMenuItems = () => {\n      const _this$props$menuData = this.props.menuData,\n            menuData = _this$props$menuData === void 0 ? [] : _this$props$menuData;\n\n      const generateItem = item => {\n        const key = item.key,\n              title = item.title,\n              url = item.url,\n              icon = item.icon,\n              pro = item.pro,\n              disabled = item.disabled;\n\n        if (item.divider) {\n          return React.createElement(Divider, {\n            key: Math.random(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          });\n        }\n\n        if (item.url) {\n          return React.createElement(_Menu.Item, {\n            key: key,\n            disabled: disabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, item.target ? React.createElement(\"a\", {\n            href: url,\n            target: item.target,\n            rel: \"noopener noreferrer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, icon && React.createElement(\"span\", {\n            className: `${icon} ${styles.icon}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: styles.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, title), pro && React.createElement(\"span\", {\n            className: \"badge badge-primary ml-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"PRO\")) : React.createElement(Link, {\n            to: url,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, icon && React.createElement(\"span\", {\n            className: `${icon} ${styles.icon}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: styles.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, title), pro && React.createElement(\"span\", {\n            className: \"badge badge-primary ml-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"PRO\")));\n        }\n\n        return React.createElement(_Menu.Item, {\n          key: key,\n          disabled: disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, icon && React.createElement(\"span\", {\n          className: `${icon} ${styles.icon}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, title), pro && React.createElement(\"span\", {\n          className: \"badge badge-primary ml-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"PRO\"));\n      };\n\n      const generateSubmenu = items => items.map(menuItem => {\n        if (menuItem.children) {\n          const subMenuTitle = React.createElement(\"span\", {\n            className: styles.menu,\n            key: menuItem.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: styles.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, menuItem.title), menuItem.icon && React.createElement(\"span\", {\n            className: `${menuItem.icon} ${styles.icon}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }));\n          return React.createElement(SubMenu, {\n            title: subMenuTitle,\n            key: menuItem.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, generateSubmenu(menuItem.children));\n        }\n\n        return generateItem(menuItem);\n      });\n\n      return menuData.map(menuItem => {\n        if (menuItem.children) {\n          const subMenuTitle = React.createElement(\"span\", {\n            className: styles.menu,\n            key: menuItem.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: styles.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, menuItem.title), menuItem.icon && React.createElement(\"span\", {\n            className: `${menuItem.icon} ${styles.icon}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }));\n          return React.createElement(SubMenu, {\n            title: subMenuTitle,\n            key: menuItem.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, generateSubmenu(menuItem.children));\n        }\n\n        return generateItem(menuItem);\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.setSelectedKeys(this.props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setSelectedKeys(newProps);\n  }\n\n  render() {\n    const selectedKeys = this.state.selectedKeys;\n    const isLightTheme = this.props.isLightTheme;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.logoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"resources/images/logo-inverse.png\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))), React.createElement(_Menu, {\n      theme: isLightTheme ? 'light' : 'dark',\n      onClick: this.handleClick,\n      selectedKeys: selectedKeys,\n      mode: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.generateMenuItems()));\n  }\n\n}, _temp)) || _class) || _class);\nexport default MenuTop;","map":{"version":3,"sources":["/Users/joshuaoluikpe/Documents/personal/wrn/src/components/LayoutComponents/Menu/MenuTop/index.js"],"names":["React","connect","Link","withRouter","store","_","styles","SubMenu","Divider","mapStateToProps","menu","settings","menuData","menuTopData","isLightTheme","isSettingsOpen","MenuTop","Component","state","selectedKeys","get","setSelectedKeys","props","flattenItems","items","key","reduce","flattenedItems","item","push","Array","isArray","concat","selectedItem","find","location","pathname","setState","handleClick","e","dispatch","set","type","payload","setting","value","generateMenuItems","generateItem","title","url","icon","pro","disabled","divider","Math","random","target","generateSubmenu","map","menuItem","children","subMenuTitle","componentWillMount","componentWillReceiveProps","newProps","render","logo","logoContainer"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Menu } from 'antd'\nimport { Link, withRouter } from 'react-router-dom'\nimport store from 'store'\nimport _ from 'lodash'\nimport styles from './style.module.scss'\n\nconst { SubMenu, Divider } = Menu\n\nconst mapStateToProps = ({ menu, settings }) => ({\n  menuData: menu.menuTopData,\n  isLightTheme: settings.isLightTheme,\n  isSettingsOpen: settings.isSettingsOpen,\n})\n\n@withRouter\n@connect(mapStateToProps)\nclass MenuTop extends React.Component {\n  state = {\n    selectedKeys: store.get('app.menu.selectedKeys') || [],\n  }\n\n  componentWillMount() {\n    this.setSelectedKeys(this.props)\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setSelectedKeys(newProps)\n  }\n\n  setSelectedKeys = props => {\n    const { menuData } = this.props\n    const flattenItems = (items, key) =>\n      items.reduce((flattenedItems, item) => {\n        flattenedItems.push(item)\n        if (Array.isArray(item[key])) {\n          return flattenedItems.concat(flattenItems(item[key], key))\n        }\n        return flattenedItems\n      }, [])\n    const selectedItem = _.find(flattenItems(menuData, 'children'), [\n      'url',\n      props.location.pathname,\n    ])\n    this.setState({\n      selectedKeys: selectedItem ? [selectedItem.key] : [],\n    })\n  }\n\n  handleClick = e => {\n    const { dispatch, isSettingsOpen } = this.props\n    store.set('app.menu.selectedKeys', [e.key])\n    if (e.key === 'settings') {\n      dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'isSettingsOpen',\n          value: !isSettingsOpen,\n        },\n      })\n      return\n    }\n    this.setState({\n      selectedKeys: [e.key],\n    })\n  }\n\n  generateMenuItems = () => {\n    const { menuData = [] } = this.props\n    const generateItem = item => {\n      const { key, title, url, icon, pro, disabled } = item\n      if (item.divider) {\n        return <Divider key={Math.random()} />\n      }\n      if (item.url) {\n        return (\n          <Menu.Item key={key} disabled={disabled}>\n            {item.target ? (\n              <a href={url} target={item.target} rel=\"noopener noreferrer\">\n                {icon && <span className={`${icon} ${styles.icon}`} />}\n                <span className={styles.title}>{title}</span>\n                {pro && <span className=\"badge badge-primary ml-2\">PRO</span>}\n              </a>\n            ) : (\n              <Link to={url}>\n                {icon && <span className={`${icon} ${styles.icon}`} />}\n                <span className={styles.title}>{title}</span>\n                {pro && <span className=\"badge badge-primary ml-2\">PRO</span>}\n              </Link>\n            )}\n          </Menu.Item>\n        )\n      }\n      return (\n        <Menu.Item key={key} disabled={disabled}>\n          {icon && <span className={`${icon} ${styles.icon}`} />}\n          <span className={styles.title}>{title}</span>\n          {pro && <span className=\"badge badge-primary ml-2\">PRO</span>}\n        </Menu.Item>\n      )\n    }\n    const generateSubmenu = items =>\n      items.map(menuItem => {\n        if (menuItem.children) {\n          const subMenuTitle = (\n            <span className={styles.menu} key={menuItem.key}>\n              <span className={styles.title}>{menuItem.title}</span>\n              {menuItem.icon && <span className={`${menuItem.icon} ${styles.icon}`} />}\n            </span>\n          )\n          return (\n            <SubMenu title={subMenuTitle} key={menuItem.key}>\n              {generateSubmenu(menuItem.children)}\n            </SubMenu>\n          )\n        }\n        return generateItem(menuItem)\n      })\n    return menuData.map(menuItem => {\n      if (menuItem.children) {\n        const subMenuTitle = (\n          <span className={styles.menu} key={menuItem.key}>\n            <span className={styles.title}>{menuItem.title}</span>\n            {menuItem.icon && <span className={`${menuItem.icon} ${styles.icon}`} />}\n          </span>\n        )\n        return (\n          <SubMenu title={subMenuTitle} key={menuItem.key}>\n            {generateSubmenu(menuItem.children)}\n          </SubMenu>\n        )\n      }\n      return generateItem(menuItem)\n    })\n  }\n\n  render() {\n    const { selectedKeys } = this.state\n    const { isLightTheme } = this.props\n    return (\n      <div>\n        <div className={styles.logo}>\n          <div className={styles.logoContainer}>\n            <img src=\"resources/images/logo-inverse.png\" alt=\"logo\" />\n          </div>\n        </div>\n        <Menu\n          theme={isLightTheme ? 'light' : 'dark'}\n          onClick={this.handleClick}\n          selectedKeys={selectedKeys}\n          mode=\"horizontal\"\n        >\n          {this.generateMenuItems()}\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default MenuTop\n"]},"metadata":{},"sourceType":"module"}